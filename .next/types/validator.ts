// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account">> = Specific
  const handler = {} as typeof import("../../app/account/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/analytics">> = Specific
  const handler = {} as typeof import("../../app/admin/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/customers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/customers">> = Specific
  const handler = {} as typeof import("../../app/admin/customers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/orders/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/orders/[id]">> = Specific
  const handler = {} as typeof import("../../app/admin/orders/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/orders">> = Specific
  const handler = {} as typeof import("../../app/admin/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/products/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/products/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/admin/products/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/products">> = Specific
  const handler = {} as typeof import("../../app/admin/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/reports/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/reports">> = Specific
  const handler = {} as typeof import("../../app/admin/reports/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings">> = Specific
  const handler = {} as typeof import("../../app/admin/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth-test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth-test">> = Specific
  const handler = {} as typeof import("../../app/auth-test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout">> = Specific
  const handler = {} as typeof import("../../app/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/handler/[...stack]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/handler/[...stack]">> = Specific
  const handler = {} as typeof import("../../app/handler/[...stack]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/products/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/[id]">> = Specific
  const handler = {} as typeof import("../../app/products/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products">> = Specific
  const handler = {} as typeof import("../../app/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/returns/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/returns">> = Specific
  const handler = {} as typeof import("../../app/returns/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/shipping/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/shipping">> = Specific
  const handler = {} as typeof import("../../app/shipping/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/signin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/signin">> = Specific
  const handler = {} as typeof import("../../app/signin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/size-guide/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/size-guide">> = Specific
  const handler = {} as typeof import("../../app/size-guide/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sudo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sudo">> = Specific
  const handler = {} as typeof import("../../app/sudo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/test-font/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-font">> = Specific
  const handler = {} as typeof import("../../app/test-font/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teyo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teyo">> = Specific
  const handler = {} as typeof import("../../app/teyo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/xvii/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/xvii">> = Specific
  const handler = {} as typeof import("../../app/xvii/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/analytics/overview/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/analytics/overview">> = Specific
  const handler = {} as typeof import("../../app/api/admin/analytics/overview/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/refresh/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth/refresh">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/refresh/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/check-role/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/check-role">> = Specific
  const handler = {} as typeof import("../../app/api/admin/check-role/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/orders/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/admin/orders/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/orders/[id]/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/status">> = Specific
  const handler = {} as typeof import("../../app/api/admin/orders/[id]/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders">> = Specific
  const handler = {} as typeof import("../../app/api/admin/orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/products/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/admin/products/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products">> = Specific
  const handler = {} as typeof import("../../app/api/admin/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/seed/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/seed">> = Specific
  const handler = {} as typeof import("../../app/api/admin/seed/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/check-user/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/check-user">> = Specific
  const handler = {} as typeof import("../../app/api/check-user/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/customer-profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/customer-profile">> = Specific
  const handler = {} as typeof import("../../app/api/customer-profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/debug-auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/debug-auth">> = Specific
  const handler = {} as typeof import("../../app/api/debug-auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/products/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/products/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products">> = Specific
  const handler = {} as typeof import("../../app/api/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/remove-user/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/remove-user">> = Specific
  const handler = {} as typeof import("../../app/api/remove-user/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/webhooks/stack-auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/stack-auth">> = Specific
  const handler = {} as typeof import("../../app/api/webhooks/stack-auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
